@startuml entities

entity Partner {
    id: string
    timestamp_registration: date-time
}

entity SelfEmployer {
    id: int64
    user_id: int64
    vatin: string
    state: SelfEmployerState
    timestamp_create: date-time
    timestamp_update: date-time
    last_order_id: int64
}

enum SelfEmployerState {
    ACTIVE
    PENDING
    DISABLED
}

SelfEmployer ..> SelfEmployerState

entity Order {
    id: int64
    guid: string
    self_employer_id: SelfEmployer.id
    order_type: OrderType
    state: OrderState
    rejection_code: string
    timestamp_create: date-time
    timestamp_update: date-time
    structure: json
}

Order .right.> SelfEmployer

enum OrderType {
    REGISTRATION
    UNREGISTRATION
    BINDING
}

enum OrderState {
    ORDER_REGISTERED
    IN_PROGRESS
    COMPLETED
    FAILED
}

Order ..> OrderType
Order ..> OrderState

entity Receipt {
    ..internal..
    id: int64
    self_employer_id: SelfEmployer.id
    transaction_id: int64

    ..external..
    receipt_guid: string
    vatin: string
    timestamp_cancelation: string
}

Receipt ..> SelfEmployer

entity Income {
    ..internal..
    id: int64
    self_employer_id: SelfEmployer.id
    transaction_id: int64

    ..external..
    vatin: string
    timestamp_request: date-time
    timestamp_operation: date-time
    income_type: IncomeType
    payer_vatin: string
    payer_name: string
    amount: number
    services: json
    
    ..offline..
    receipt_guid: string
    income_hash_code: string
    link: string
}

enum IncomeType {
    FROM_INDIVIDUAL
    FROM_LEGAL_ENTITY
    FROM_FOREIGN_AGENCY
}

Receipt .left.> Income

Income ..> SelfEmployer
Income ..> IncomeType
Income ..> Partner

entity OfflineKey {
    ..internal..
    id: int64
    income_id: Income.id

    ..external..
    sequence_number: string
    base64_key: string
    expire_time: date-time
}

OfflineKey .right.> Income

@enduml