@startuml 1c-directbank-proposal-auth&sync-sequence

actor "1C:Предприятие 8" as 1CERP
participant "1C DirectBank" as 1CDirect <<API Gateway>>
participant "Auth service" as AutheService
participant "CA service" as CAService
participant "Customer service" as CustomerService

title Password authentication and settings synchronization (actual)

1CERP -> 1CDirect: POST /Logon
activate 1CDirect

1CDirect -> AutheService: GET /checkLogin
activate AutheService
return Auth success info

1CDirect -> 1CDirect: Generate {sessionId}
return {sessionId} and {maskedPhoneNumber}

|||

1CERP -> 1CDirect: POST /LogonOTP
activate 1CDirect

1CDirect -> AutheService: GET /checkOTP
activate AutheService

return OTP success info with {access_token}

return SID={access_token}

|||

1CERP -> 1CDirect: POST /GetSettings SID={access_token}
activate 1CDirect

1CDirect -> 1CDirect: Check {iat} and {exp}
1CDirect -> 1CDirect: Authorize request by verify signature

1CDirect -> CustomerService: GET /customer?vatin={vatin}
activate CustomerService

return {customerRef}

1CDirect -> CAService: GET /certs
activate CAService

return Cert info

return Setting parameters 

@enduml


@startuml 1c-directbank-proposal-cryptopro-cert-auth-sequence

actor "1C:Предприятие 8" as 1CERP
participant "1C DirectBank" as 1CDirect <<API Gateway>>
participant "Auth service" as AutheService <<Component>>
participant "CA service" as CAService <<Component>>

title Authentication by certificate (propose auth)

1CERP -> 1CDirect: POST /LogonCert
activate 1CDirect

1CDirect -> AutheService: POST /token?grant_type=certificate
activate AutheService

AutheService -> CAService: GET /certs?serial_number={serial_number}
activate CAService

return Certificate {status}, {public_key} and {user_id}

AutheService -> AutheService: Create client session

AutheService -> AutheService: Generate JWT {access_token}

AutheService -> AutheService: Encrypt {access_token} to {encrypted_access_token}

return {encrypted_access_token}

return EncryptedSID={encrypted_access_token}

|||

1CERP -> 1CDirect: Request with SID={access_token}
activate 1CDirect

1CDirect -> 1CDirect: Check {iat} and {exp}
1CDirect -> 1CDirect: Authorize request by verify signature

return Response something

@enduml