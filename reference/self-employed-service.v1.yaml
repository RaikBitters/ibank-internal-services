openapi: 3.0.0
info:
  title: Self-employed service
  version: '0.1'
  description: |-
    [Architecture decision record](../docs/self-employed-adr.md)

    Сервис для самозанятых.
    Сервис интегрируется с прикладной подсистемой АИС «Налог-3», обеспечивающей налогообложение доходов физических лиц, полученных от профессиональной деятельности.
    Основные кейсы предоставляемые сервисом:
    1. Постановка и снятие налогоплательщика с учёта.
    2. Регистрация дохода.
    3. Получение справок.
    4. Получение справочников.
    5. Работа с оповещениями.
  contact:
    name: Reinhold Shekhtel
    email: raikbitters@gmail.com
tags:
  - name: Incomes
  - name: References
  - name: Orders
  - name: Self-employer
  - name: Inprogress
  - name: Notifications
  - name: Registration
  - name: Reference-data
  - name: Registration info
servers:
  - url: 'http://localhost:3000'
paths:
  '/restrictions/{vatin}':
    get:
      summary: Get restrictions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restriction'
      operationId: get-restrictions
      description: |-
        Первичная проверка существующих ограничений для регистрации налогоплательщика. Обязательна перед регистрацией.
        Полный набор проверок делается только в момент постановки на учет в ПП ЦУН АИС «Налог-3». То есть, при успешном прохождении первичной проверки на наличие ограничений при постановке на учет, нет гарантии, что при фактической постановке на учет не последует отказа.
      tags:
        - Registration info
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
  '/self-employers/{vatin}':
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
    get:
      summary: Get self-employer info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SelfEmployer'
                  - $ref: '#/components/schemas/SelfEmployerMutable'
      operationId: get-self-employers-id
      description: Получение детальной информации о самозанятом.
      tags:
        - Self-employer
    delete:
      summary: Unactivate self-employer
      operationId: delete-self-employers-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Order'
                  - $ref: '#/components/schemas/SelfEmployer'
      description: |-
        Отвязка от банка, опционально cо снятием с учёта в ФНС.
        Пользователь числится в системе как UNACTIVE.
      parameters:
        - schema:
            type: boolean
            default: 'false'
          in: query
          description: Признак необходимости снятия пользователя с учёта в ФНС
          name: unregistartion
      tags:
        - Self-employer
    put:
      summary: Update self-employer
      operationId: put-self-employers-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SelfEmployer'
                  - $ref: '#/components/schemas/SelfEmployerMutable'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/SelfEmployerMutable'
                - required:
                    - activities
                    - oktmo
            examples: {}
      description: Обновление информации о видах деятельности самозанятого.
      tags:
        - Self-employer
  /self-employers:
    post:
      summary: Bind self-employer
      operationId: post-self-employers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      description: |-
        Добавление (привязка) пользователя как самозантого происходит двумя способами:
        * Привязка пользователя как самозанятого к платформе банка.
        * Привязка пользователя с предварительной регистрацией в ФНС как самозанятого.

        Оба способа создают заявки на стороне ФНС которые можно отследить по `order id`.

        В случаи если пользователь уже есть в системе банка, был ранее отвязан, статус меняется с DISABLED на ACTIVE. Статус самозанятого переходит в ACTIVE через промежуточный статус PENDING.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BindingInfo'
                - $ref: '#/components/schemas/BindingWithRegistrationInfo'
        description: Данные для регистрация или привязки пользователя.
      tags:
        - Self-employer
      parameters:
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: registration
          description: Необходимость регистрации.
    get:
      summary: Get self-employers
      operationId: get-self-employers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/CollectionCursor.v1.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/SelfEmployer'
              examples: {}
      parameters:
        - schema:
            type: integer
            format: int64
          in: query
          name: user_id
          description: ID пользователя интернет банка
      description: |-
        Получения списка самозанятых.
        Доступна фильтрация по user_id.
      tags:
        - Self-employer
  '/orders/{id}':
    get:
      summary: Get order by id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: get-orders
      description: Получение информации о выполнении заявки по id.
      tags:
        - Orders
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
  '/reference-data/{type}':
    get:
      summary: Get reference data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/CollectionCursor.v1.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        minItems: 1
                        items:
                          $ref: '#/components/schemas/ReferenceData'
      operationId: get-reference-data
      description: |-
        Получение справочников со списком кодов применяемых в ФНС.
        Доступные типы:
        1. regions - справочник регионов;
        2. activities - справочник видов деятельности;
        3. rejection - справочник причин отказа в регистрации;
        4. unregistration - справочник причин снятия с учёта;
        5. cancel-income - справочник причин отмены регистрации дохода.
      tags:
        - Reference-data
      parameters: []
    parameters:
      - schema:
          type: string
          enum:
            - regions
            - activities
            - rejection
            - unregistration
            - cancel-income
        name: type
        in: path
        required: true
        description: Тип справочника.
  '/self-employers/{vatin}/incomes':
    get:
      summary: Get incomes
      tags:
        - Incomes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/CollectionOffset.v1.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Receipt'
      operationId: get-incomes
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: from
          description: 'Дата, начиная с которой отображать зарегистрированные доходы'
        - schema:
            type: string
          in: query
          name: to
          description: 'Дата, до которой отображать зарегистрированные доходы.'
        - schema:
            type: integer
          in: query
          name: limit
          required: true
        - schema:
            type: integer
          in: query
          name: offset
          required: true
    post:
      summary: Registering income
      tags:
        - Incomes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
      operationId: post-incomes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
      description: |-
        Источник/Тип дохода:
        * FROM_INDIVIDUAL (Доход от Физического Лица)
        * FROM_LEGAL_ENTITY (Доход от Юридического Лица)
        * FROM_FOREIGN_AGENCY (Доход от Иностранной Организации)
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
  '/self-employers/{vatin}/incomes/{id}':
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID чека
    get:
      summary: Get income
      tags:
        - Incomes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
      operationId: get-incomes-id
    delete:
      summary: Cancellation income
      operationId: delete-incomes-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
      tags:
        - Incomes
      description: ''
  '/self-employers/{vatin}/account':
    get:
      summary: Get account status
      tags:
        - Account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      operationId: get-account
      description: ''
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
  '/self-employers/{vatin}/accruals':
    get:
      summary: Get accruals and debts
      tags:
        - Account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/CollectionOffset.v1.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Accrual'
      operationId: get-account-accruals-and-debts
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
  '/self-employers/{vatin}/payment-documents':
    get:
      summary: Get payment documents
      tags:
        - Account
      responses:
        '200':
          description: OK
      operationId: get-payment-documents
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
  '/self-employers/{vatin}/notifications/':
    get:
      summary: '[In progress] Get notifications'
      tags:
        - Notifications
        - Inprogress
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/CollectionCursor.v1.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Notification'
              examples: {}
      operationId: get-notifications
      description: Получение списка оповещений для НП НПД.
      parameters:
        - schema:
            type: boolean
          in: query
          name: acknowleged
          description: Показывать прочитанные.
        - schema:
            type: boolean
          in: query
          name: archived
          description: Показывать заархивированные.
    post:
      summary: '[In progress] Change all notifications'
      tags:
        - Notifications
        - Inprogress
      responses: {}
      operationId: post-notifications
      description: ''
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
  '/self-employers/{vatin}/notifications/{notif-id}':
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID нотификации.
    put:
      summary: '[In progress] Update notification'
      tags:
        - Notifications
        - Inprogress
      responses: {}
      operationId: put-notifications-id
  '/self-employers/{vatin}/notifications/count':
    get:
      summary: Get notifications count
      tags:
        - Notifications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Кол-во не прочитанных сообщений.
      operationId: get-notifications-count
      description: ''
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
  '/self-employers/{vatin}/incomes-period/{id}':
    parameters:
      - $ref: '#/components/parameters/SelfEmployerResourceId'
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID налогового периода (YYYYMM)
    get:
      summary: Get info by incomes for period
      tags:
        - Incomes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeForPeriod'
      operationId: get-self-employers-vatin-incomes-period
      description: Получение информации по доходу НП НПД за период.
  '/self-employers/{vatin}/references/{type}':
    parameters:
      - schema:
          type: string
          enum:
            - income
            - registration
        name: type
        in: path
        required: true
        description: Тип справки
      - $ref: '#/components/parameters/SelfEmployerResourceId'
    get:
      summary: Get reference for self-employer
      operationId: get-self-employers-vatin-reference
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
                description: PDF файл.
        '':
          content:
            application/pdf:
              schema:
                type: object
                description: PDF файл справки.
          description: PDF файл справки
      description: |-
        Типы справок:
        * registration - получение справки о постановке на учет в качестве НП НПД в новом формате.
        * income - получение справки о доходах НП НПД в новом формате.
      parameters:
        - schema:
            type: string
            format: date-time
          in: query
          name: request_time
          description: Дата запроса.
          required: true
        - schema:
            type: string
          in: query
          name: request_year
          description: 'Год, за который запрашивается справка.'
          required: true
      tags:
        - References
  '/self-employers/{vatin}/orders/':
    parameters:
      - schema:
          type: string
        name: vatin
        in: path
        required: true
    get:
      summary: Get self-employer orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/CollectionCursor.v1.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Order'
      operationId: get-self-employers-vatin-orders
      description: Получение информации о заявках самозанятого.
      tags:
        - Orders
  '/self-employers/{vatin}/permissions':
    parameters:
      - schema:
          type: string
        name: vatin
        in: path
        required: true
    get:
      summary: Get self-employer permissions
      tags:
        - Self-employer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsList'
      operationId: get-self-employers-vatin-permission
      description: ''
  /vatin-request:
    parameters: []
    post:
      summary: Create VATIN request
      operationId: post-references-vatin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vatin:
                    type: string
                    description: ИНН.
      description: Запрос на получение ИНН пользователя по персональным данным.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VatinRequest'
      tags:
        - Registration info
components:
  schemas:
    Restriction:
      title: Restriction
      type: object
      description: Первичной проверка на возможность регистрации.
      x-examples: {}
      x-tags:
        - Models
      properties:
        result:
          type: string
          enum:
            - ALLOW
            - DENY
          description: |-
            Результат запроса: 
            ALLOW – можно ставить на учет, 
            DENY – нельзя ставить на учет.
        rejection_code:
          type: string
          description: Получаем если результат = DENY.
    BindingWithRegistrationInfo:
      title: Self-employer binding with registration
      description: Информация для привязки пользователя с постановкой на учёт.
      x-examples: {}
      x-tags:
        - Models
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          description: GUID пользователя интернет банка.
        vatin:
          type: string
          description: ИНН.
        first_name:
          type: string
          description: Имя.
        last_name:
          type: string
          description: Фамилия.
        birthday:
          type: string
          format: date
          description: Дата рождения.
        phone:
          type: string
          description: Номер телефона.
        activities:
          type: array
          description: Список кодов экономической деятельности (ОКВЭД).
          items:
            type: string
        oktmo:
          type: string
          description: Регион деятельности.
      required:
        - user_id
        - vatin
        - first_name
        - last_name
        - birthday
        - phone
        - activities
        - oktmo
    SelfEmployer:
      title: Self-employer
      description: Профиль самозанятого в Интернет банке.
      x-examples: {}
      x-tags:
        - Models
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
          description: GUID пользователя в Интернет банке.
        vatin:
          type: string
          description: ИНН.
        state:
          type: string
          enum:
            - ACTIVE
            - PENDING
            - DISABLED
          description: Статус пользователь как самозанятого в Интернет банке.
        timestamp_create:
          type: string
          format: date-time
          description: Дата создания.
        timestamp_update:
          type: string
          format: date-time
          description: Дата последнего обновления.
        last_order_id:
          type: integer
          format: int64
          description: ID последней заявки в ФНС у самозанятого.
    Order:
      title: Order
      type: object
      description: |-
        Данные заказа на выполение заявки в налоговой. Создаётся для операций с ФНС:
        * Регистрация пользователя.
        * Снятие с учёта пользователя.
        * Привязка пользователя к интернет банку.
      x-tags:
        - Models
      properties:
        id:
          type: integer
          format: int64
          description: ''
        guid:
          type: string
          description: ID заявки в ФНС.
        self_employer_id:
          type: integer
          format: int64
          description: ID самозанятого.
        order_type:
          type: string
          description: Тип заявки.
          enum:
            - REGISTRATION
            - UNREGISTRATION
            - BINDING
        state:
          type: string
          enum:
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - ORDER_REGISTERED
          description: Текущее состояние заявки.
        rejection_code:
          type: string
          description: Код причины отказа.
        timestamp_create:
          type: string
          format: date-time
          description: Дата создания заявки.
        timestamp_update:
          type: string
          format: date-time
          description: Дата последнего обновления заявки.
        structure:
          oneOf:
            - $ref: '#/components/schemas/BindingWithRegistrationInfo'
            - $ref: '#/components/schemas/BindingInfo'
            - $ref: '#/components/schemas/UnregistrationInfo'
    ReferenceData:
      type: object
      description: Справочная информация.
      title: Reference data
      x-tags:
        - Models
      properties:
        code:
          type: string
          description: Код.
        description:
          type: string
          description: Описание.
        parent_code:
          type: string
          description: 'Код родительского элемента, при наличии иерархии в списке.'
        availability:
          type: boolean
          description: 'Признак доступности для пользователя, при наличии ограничений в списках.'
    Income:
      title: Income
      type: object
      x-tags:
        - Models
      description: Информация о доходе налогоплательщика.
      x-examples: {}
      properties:
        timestamp_request:
          type: string
          format: date-time
          description: Дата формирования.
        timestamp_operation:
          type: string
          format: date-time
          description: Дата расчёта.
        income_type:
          type: string
          enum:
            - FROM_INDIVIDUAL
            - FROM_LEGAL_ENTITY
            - FROM_FOREIGN_AGENCY
          description: Источник дохода.
        payer_vatin:
          type: integer
          format: int64
          description: ИНН покупателя.
        payer_name:
          type: string
          description: Наименование организации - покупателя.
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        amount:
          type: number
          description: Общая стоимость оказанных услуг.
        geo_info:
          $ref: '#/components/schemas/GeoPoint'
        transaction_id:
          type: integer
          format: int64
          description: ID транзакции по которой произовдится регистрация дохода.
      required:
        - timestamp_request
        - timestamp_operation
        - income_type
        - services
        - amount
    Service:
      title: Service
      type: object
      x-tags:
        - Models
      properties:
        price:
          type: number
        name:
          type: string
        quantity:
          type: integer
    Receipt:
      title: Receipt
      allOf:
        - $ref: '#/components/schemas/Income'
        - type: object
          description: Информация о чеке.
          properties:
            taxable_period:
              type: string
              description: 'Налоговый период, в котором при расчете налога будет/был учтен чек (формат, yyyyMM)'
            tax:
              type: number
              description: Налог к уплате с данного чека (начисленный налог минус использованный бонус).
            timestamp_cancelation:
              type: string
              format: date-time
              description: Дата сторнирования.
            link:
              type: string
              description: Ссылка на чек загрузки.
            receipt_guid:
              type: string
              description: Id чека в ФНС.
            id:
              type: integer
              format: int64
      x-tags:
        - Models
      description: Информация о выписанном чеке с несколькими услугами
      x-examples: {}
    SelfEmployerMutable:
      title: Self-employer mutable Information
      type: object
      description: Данные обновляемые для самозанятого.
      x-tags:
        - Models
      properties:
        activities:
          type: array
          description: Список кодов экономической деятельности (ОКВЭД).
          items:
            type: string
        oktmo:
          type: string
          description: Код региона деятельности (ОКАТО).
    Account:
      title: Account
      type: object
      description: Данные лицевого счета налогоплательщика.
      properties:
        bonus_amount:
          type: number
          description: Сумма бонусного счета.
        unpaid_amount:
          type: number
          description: Общая сумма неоплаченных платежей.
        debt_amount:
          type: number
          description: Сумма задолжности (включена в общая сумму неоплаченных платежей).
      x-tags:
        - Models
    GeoPoint:
      title: GeoPoint
      type: object
      properties:
        latitude:
          type: number
          description: Широта.
        longitude:
          type: number
          description: Долгота.
      x-tags:
        - Models
    IncomeForPeriod:
      title: IncomeForPeriod
      type: object
      properties:
        total_amount:
          type: number
          description: Сумма зарегистрированного дохода за период.
        canceled_total_amount:
          type: number
          description: Сумма сторнированного дохода за период.
        tax:
          type: number
          description: Рассчитанный налог за период.
      x-tags:
        - Models
    Accrual:
      title: Accrual
      type: object
      description: Налоговые начисления и задолженности налогоплательщика
      x-tags:
        - Models
      properties:
        vatin:
          type: string
          description: ИНН.
        tax_charge_list:
          type: array
          description: Список налоговых начислений.
          items:
            $ref: '#/components/schemas/TaxCharge'
        calculation_card_list:
          description: Список карточек расчета с бюджетом.
          type: array
          items:
            $ref: '#/components/schemas/CalculationCard'
    TaxCharge:
      title: Tax charge
      type: object
      description: Налоговое начисление.
      properties:
        amount:
          type: number
          description: Сумма начисления.
        due_date:
          type: string
          description: Срок оплаты
          format: date
        tax_period_id:
          type: integer
          description: Идентификатор налогового периода (YYYYMM).
        oktmo:
          type: string
          description: ОКТМО региона ведения деятельности.
        kbk:
          type: string
          description: Код бюджетной классификации.
        paid_amount:
          type: number
          description: Сумма поступивших оплат в АИС Налог 3 по данному начислению.
        timestamp_create:
          type: string
          format: date-time
          description: Дата и время создания налогового начисления.
        id:
          type: integer
          format: int64
          description: Внутренний идентификатор налогового начисления в ПП НПД.
      x-tags:
        - Models
    CalculationCard:
      title: Calculation card with budget
      type: object
      description: Карточка расчета с бюджетом (КРСБ) по данным АИС Налог 3.
      properties:
        id:
          type: integer
          format: int64
          description: Внутренний идентификатор карточки в ПП НПД.
        debt:
          type: number
          description: Сумма задолженности по карточке.
        penalty:
          type: number
          description: Сумма пени по карточке.
        overpayment:
          type: number
          description: Сумма переплаты по карточке.
        oktmo:
          type: string
          description: 'ОКТМО региона ведения деятельности, связанного с КРСБ.'
        kbk:
          type: string
          description: 'Код бюджетной классификации, связанный с КРСБ.'
        tax_organ_code:
          type: string
          description: 'Код налогового органа, связанного с КРСБ.'
        timestamp_update:
          type: string
          description: Время обновления информации по карточке в ПП НПД.
          format: date-time
      x-tags:
        - Models
    BindingInfo:
      title: Self-employer binding
      description: Информация для привязки пользователя как самозанятого.
      x-tags:
        - Models
      type: object
      properties:
        user_id:
          type: integer
          format: int64
          description: GUID пользователя интернет банка.
        vatin:
          type: string
          description: ИНН.
      required:
        - user_id
        - vatin
    PaymentDocument:
      title: Payment document
      type: object
      description: Данные платежного документа.
      x-tags:
        - Models
      properties:
        type:
          type: string
          description: Тип платежного документа.
        document_index:
          type: string
          description: Индекс документа (УИН).
        full_name:
          type: string
          description: ФИО налогоплательщика.
        address:
          type: string
          description: Адрес места жительства.
        vatin:
          type: string
          description: ИНН налогоплательщика.
        amount:
          type: number
          description: Сумма к оплате.
        recipient_bank_name:
          type: string
          description: Банк получателя.
        recipient_bank_bik:
          type: string
          description: БИК банка получателя.
        recipient_bank_account_number:
          type: string
          description: Номер счёта банка получателя.
        recipient:
          type: string
          description: Получатель.
        recipient_account_number:
          type: string
          description: Номер счёта получателя.
        recipient_vatin:
          type: string
          description: ИНН получателя.
        recipient_kpp:
          type: string
          description: КПП получателя.
        kbk:
          type: string
          description: КБК.
        oktmo:
          type: string
          description: ОКТМО.
        code_101:
          type: string
          description: Код для поля 101.
        code_106:
          type: string
          description: Код для поля 106.
        code_107:
          type: string
          description: Код для поля 107.
        code_110:
          type: string
          description: Код для поля 110.
        due_date:
          type: string
          format: date
          description: Дата до которой требуется внести оплату.
        timestamp_create:
          type: string
          format: date-time
          description: Дата создания документа.
        source_id:
          type: integer
          format: int64
          description: Внутренний идентификатор источника документа в ПП НПД.
    Notification:
      title: Notification
      type: object
      x-tags:
        - Models
      description: Структура уведомления.
      properties:
        id:
          type: string
          description: Идентификатор уведомления.
        title:
          type: string
          description: Заголовок уведомления.
        message:
          type: string
          description: Уведомление.
        status:
          type: string
          description: Статус уведомления.
        timestamp_created:
          type: string
          format: date-time
          description: Дата создания.
        partner_id:
          type: string
          description: 'Идентификатор партнера, внесшего последние изменения.'
        application_id:
          type: string
          description: 'Идентификатор приложения, внесшего последние изменения.'
    PermissionsList:
      title: PermissionsList
      type: object
      properties:
        permissions:
          type: array
          items:
            type: string
      x-examples: {}
      x-tags:
        - Models
    VatinRequest:
      title: Vatin request
      type: object
      description: Данные для запроса информации о ИНН.
      properties:
        first_name:
          type: string
          description: Имя.
        second_name:
          type: string
          description: Фамилия.
        birthday:
          type: string
          description: Дата рождения.
          format: date
        passport_series:
          type: string
          description: Номер паспорта.
        passport_number:
          type: string
          description: Серия паспорта.
      required:
        - first_name
        - second_name
        - birthday
        - passport_series
        - passport_number
      x-tags:
        - Models
    UnregistrationInfo:
      title: UnregistrationInfo
      type: object
      x-tags:
        - Models
      properties:
        vatin:
          type: string
          description: ИНН.
        reason_code:
          type: string
          description: Код причины. Доступен только REFUSE (Отказываюсь от применения специального налогового режима).
  securitySchemes: {}
  responses: {}
  parameters:
    SelfEmployerResourceId:
      name: vatin
      in: path
      required: true
      schema:
        type: string
      description: ИНН.
