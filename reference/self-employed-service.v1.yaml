openapi: 3.0.0
info:
  title: Self-employed service
  version: '0.1'
  description: |-
    Сервис для самозанятых.
    Сервис интегрируется с прикладной подсистемой АИС «Налог-3», обеспечивающей налогообложение доходов физических лиц, полученных от профессиональной деятельности.
    Основные кейсы предоставляемые сервисом:
    1. Постановка и снятие с учёта.
    2. Регистрация дохода.
    3. Получение справок.
    4. Получение справочников.
    5. Работа с оповещениями.
  contact:
    name: Reinhold Shekhtel
    email: raikbitters@gmail.com
tags:
  - name: Self-employers
    description: Self-employers collection
  - name: Dictionaries
  - name: Incomes
  - name: Reference
servers:
  - url: 'http://localhost:3000'
paths:
  '/restrictions/{vatin}':
    get:
      summary: Get restrictions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restriction'
      operationId: get-restrictions
      description: |-
        Первичная проверка существующих ограничений для регистрации налогоплательщика. Обязательна перед регистрацией.
        Полный набор проверок делается только в момент постановки на учет в ПП ЦУН АИС «Налог-3». То есть, при успешном прохождении первичной проверки на наличие ограничений при постановке на учет, нет гарантии, что при фактической постановке на учет не последует отказа.
      tags:
        - Self-employers
    parameters:
      - schema:
          type: string
        name: vatin
        in: path
        required: true
        description: ИНН
  '/self-employers/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ИНН
    get:
      summary: Get self-employer info
      tags:
        - Self-employers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfEmployerInfo'
      operationId: get-self-employers-id
      description: Получение детальной информации о самозанятом.
    delete:
      summary: Unregistration self-employer
      operationId: delete-self-employers-id
      responses:
        '200':
          description: OK
      description: |-
        Снятие пользователя с учёта в ФНС с указанием причины снятия.
        Пользователь числится в системе как UNACTIVE.
      parameters:
        - schema:
            type: string
          in: query
          name: reasons
          required: true
          description: Код причины снятия с учёта
      tags:
        - Self-employers
    patch:
      summary: Update self-employer info
      operationId: patch-self-employers-id
      responses:
        '200':
          description: OK
      description: |-
        Обновление информации о самозанятом на выбор: 
        * Обновление статуса для привязки или отвязки.
        * Обновление видов деятельности.
        Возможно изменение статуса через промежуточный статус PENDING.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfEmployer'
        description: |-
          Привязка или отвязка пользователя через полу status:
          * При смене статуса с UNACTIVE на ACTIVE происходит привязка.
          * При смене статуса с ACTIVE на UNACTIVE происходит отвязка.
      tags:
        - Self-employers
  /self-employers:
    post:
      summary: Create self-employer
      operationId: post-self-employers
      responses:
        '200':
          description: OK
      description: Регистрация самозанятого.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfEmployerRegistration'
        description: Данные для регистрация пользователя.
      tags:
        - Self-employers
    get:
      summary: Get self-employers list
      operationId: get-self-employers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Collection.v1.yaml
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/SelfEmployer'
              examples: {}
      parameters:
        - schema:
            type: integer
            format: int64
          in: query
          name: user_id
          description: ID пользователя интернет банка
      description: |-
        Получения списка самозанятых.
        Доступна фильтрация по user_id.
      tags:
        - Self-employers
  '/orders/{id}':
    get:
      summary: Get order by id
      tags:
        - Self-employers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
      operationId: get-orders
      description: Получение заявки по id.
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
  '/dictionaries/{type}':
    get:
      summary: Get dictionary
      tags:
        - Dictionaries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: ../models/Collection.v1.yaml
                  - type: object
                    properties:
                      items:
                        $ref: '#/components/schemas/Dictionary'
      operationId: get-dictionary
      description: |-
        Получение справочников со списком кодов применяемых в ФНС.
        Доступные типы:
        1. regions - справочник регионов;
        2. activities - справочник видов деятельности;
        3. rejection - справочник причин отказа в регистрации;
        4. unregistration - справочник причин снятия с учёта;
        5. cancel-income - справочник причин отмены регистрации дохода.
    parameters:
      - schema:
          type: string
          enum:
            - regions
            - activities
            - rejection
            - unregistration
            - cancel-income
        name: type
        in: path
        required: true
        description: Тип справочника
  '/self-employers/{id}/incomes':
    get:
      summary: Get incomes
      tags:
        - Incomes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ''
      operationId: get-incomes
      description: ''
    post:
      summary: Registering income
      tags:
        - Incomes
      responses: {}
      operationId: post-incomes
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ИНН
  '/self-employers/{employer-id}/incomes/{id}':
    parameters:
      - schema:
          type: string
        name: employer-id
        in: path
        required: true
        description: ИНН
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: id дохода
    get:
      summary: Get income
      tags:
        - Incomes
      responses: {}
      operationId: get-incomes-id
    delete:
      summary: Cancellation income
      operationId: delete-incomes-id
      responses:
        '200':
          description: OK
      tags:
        - Incomes
  '/self-employers/{id}/account':
    get:
      summary: Get account status
      tags:
        - Account
      responses: {}
      operationId: get-account
      description: ''
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ИНН
  '/self-employers/{id}/accruals-and-debts':
    get:
      summary: Get accruals and debts
      tags:
        - Account
      responses: {}
      operationId: get-account-accruals-and-debts
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ИНН
  '/self-employers/{id}/payment-documents':
    get:
      summary: Get payment documents
      tags:
        - Account
      responses: {}
      operationId: get-payment-documents
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ИНН
  '/reference/{type}':
    parameters:
      - schema:
          type: string
        name: type
        in: path
        required: true
    get:
      summary: Get reference
      tags:
        - Reference
      responses: {}
      operationId: get-reference-type
      description: |-
        Reference type:
        * Registration
        * Income
  /notifications:
    get:
      summary: Get notifications
      tags:
        - Notifications
      responses: {}
      operationId: get-notifications
    post:
      summary: Change all notifications
      tags:
        - Notifications
      responses: {}
      operationId: post-notifications
      description: ''
  '/notifications/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Update notification
      tags:
        - Notifications
      responses: {}
      operationId: put-notifications-id
  /notifications/count:
    get:
      summary: Get notifications count
      tags:
        - Notifications
      responses: {}
      operationId: get-notifications-count
components:
  schemas:
    Restriction:
      title: Restriction
      type: object
      description: Первичной проверка на возможность регистрации.
      x-examples: {}
      properties:
        result:
          type: string
          enum:
            - ALLOW
            - DENY
          description: |-
            Результат запроса: 
            ALLOW – можно ставить на учет, 
            DENY – нельзя ставить на учет.
        deny_code:
          type: string
          description: Получаем если результат = DENY.
      x-tags:
        - Models
    SelfEmployerRegistration:
      title: Self-employer registration
      description: Информация для постановки на учёт.
      x-examples: {}
      type: object
      properties:
        vatin:
          type: integer
          format: int64
          description: ИНН
        user_id:
          type: integer
          format: int64
        first_name:
          type: string
        last_name:
          type: string
        birthday:
          type: string
          format: date
        passport_series:
          type: string
        passport_number:
          type: string
        activity_code:
          description: Список кодов экономической деятельности (ОКВЭД)
          type: array
          items:
            type: string
        region_code:
          type: string
          description: Код региона деятельности (ОКАТО)
      required:
        - vatin
        - user_id
        - first_name
        - last_name
        - birthday
        - passport_series
        - passport_number
        - activity_code
        - region_code
      x-tags:
        - Models
    SelfEmployer:
      title: Self-employer
      type: object
      description: Основная информация о самозанятом.
      properties:
        id:
          type: integer
          description: ИНН
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - UNACTIVE
            - PENDING
        user_id:
          type: integer
          format: int64
        activity_code:
          type: array
          description: Список кодов экономической деятельности (ОКВЭД)
          items:
            type: string
        region_code:
          type: string
          description: Код региона деятельности (ОКАТО)
      required:
        - id
        - status
        - user_id
      x-tags:
        - Models
    SelfEmployerInfo:
      title: Self-employer Info
      description: Детальная информация о самозанятом.
      allOf:
        - $ref: '#/components/schemas/SelfEmployer'
        - type: object
          properties:
            timestamp_create:
              type: string
              format: date-time
            timestamp_update:
              type: string
              format: date-time
            last_application_id:
              type: integer
              format: int64
      x-examples: {}
      x-tags:
        - Models
    Order:
      title: Order
      type: object
      description: |-
        Заявка для налоговой. Создаётся для операций с ФНС:
        * Регистрация пользователя.
        * Снятие с учёта пользователя.
        * Привязка пользователя к интернет банку.
      properties:
        id:
          type: integer
          format: int64
          description: ''
        fts_order_id:
          type: string
          description: ID заявки в ФНС
        order_type:
          type: string
          description: Тип заявки
          enum:
            - REGISTRATION
            - UNREGISTRATION
            - BINDING
        result:
          type: string
          enum:
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - ORDER_REGISTERED
          description: Текущий результат заявки
        rejection_code:
          type: string
          description: Причина отказа
        timestamp_create:
          type: string
          format: date-time
        timestamp_update:
          type: string
          format: date-time
        structure:
          oneOf:
            - $ref: '#/components/schemas/SelfEmployerRegistration'
            - $ref: '#/components/schemas/SelfEmployer'
          description: Состав заявки отправленной в ФНС
      x-tags:
        - Models
    Dictionary:
      type: array
      description: Справочник кодов.
      title: Dictionary
      uniqueItems: true
      minItems: 1
      items:
        type: object
        properties:
          code:
            type: string
          description:
            type: string
      x-tags:
        - Models
    Income:
      title: Income
      type: object
      x-tags:
        - Models
      properties:
        timestamp_creation:
          type: string
          format: date-time
        timestamp_calculation:
          type: string
          format: date-time
        income_type:
          type: string
          enum:
            - FROM_INDIVIDUAL
            - FROM_LEGAL_ENTITY
            - FROM_FOREIGN_AGENCY
        buyer_vatin:
          type: integer
          format: int64
        buyer_name:
          type: string
        services:
          type: array
          items: {}
        taxable_period:
          type: string
        tax:
          type: number
        timestamp_cancellation:
          type: string
          format: date-time
      required:
        - timestamp_creation
        - timestamp_calculation
        - income_type
        - buyer_vatin
        - buyer_name
        - services
      description: ''
      x-examples: {}
    Service:
      title: Service
      type: object
      x-tags:
        - Models
      properties:
        price:
          type: number
        name:
          type: string
        '':
          type: string
    Receipt:
      title: Receipt
      type: object
      properties:
        id:
          type: integer
          format: int64
        ref:
          type: string
      required:
        - id
      description: ''
  securitySchemes: {}
